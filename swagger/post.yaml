tags:
 name: Post
 description: Post's Router
paths:
  /post:
    post:
      summary:  Create a new post
      description:  Insert post's information from post_information table & Response post's information
      tags:
      - Post
      requestBody:
         required:  true
         description:  게시글 작성 시 필요한 게시글 정보를 입력받는 req.body이다.
         content:
             application/json:
                 schema:
                     type:  object
                     properties:
                         title:  
                             type:  string
                             description:  게시글 제목. 최소 1글자, 최대 100글자까지 입력할 수 있으며, 한글, 알파벳, 숫자, 특수문자를 다 허용한다.
                             example:  맛있는 맛집 1을 소개합니다~! I will introduce restaurant1##
                         content:
                             type:  string
                             description:  게시글 내용. 최소 1글자, 최대 500글자까지 입력할 수 있으며, 한글, 알파벳, 숫자, 특수문자를 다 허용한다.
                             example:  정말 맛있는 집이에요~ 회사에서 10m밖에 안 떨어져 있어서 자주 갈 것 같아요!! 
      responses:
         "201":
             description:  게시글 작성을 성공한 경우이다. 게시글 작성을 성공한 사실을 message 키를 갖는 JSON 형식으로 출력한다.
             schema:
                 type: object
                 properties:
                     message:
                         type:  string
                         example:  write post success
         "400":
             description: 유저가 req.body에 게시글을 잘못 입력하여 유효성 검사 미들웨어에서 걸려진 경우이다. 어떤 항목에서 어떻게 잘못되었는지 문자열 형식으로 오류를 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  400
                             message:
                                 type:  string
                                 example:  wrong input at title please input 1 ~ 100 chars long
         "401":
             description: 로그인이 안 되어 있는 경우 로그인이 필요한 페이지임을 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  401
                             message:
                                 type:  string
                                 example:  Login isn't running please log in    
         "404":
             description:  사용자가 아무 것도 입력하지 않았을 경우이다. 아무 것도 입력하지 않았음을 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  404
                             message:
                                 type:  string
                                 example: you don't input please input anything
  /posts:
    get:
      summary: Select post's information with pagination and search function
      description: Select posts' information from post_information table & Response posts' information with page and search function
      tags:
      - Post
      parameters:
      - in:  query
        type:  int
        required:  true
        default:  1
        name:  page
        description:  페이지네이션할 때, 페이지에 해당하는 값으로 req.query.page로 받는다. 숫자만 입력 가능하다.
      - in:  query
        type:  int
        required:  true
        default:  5
        name:  page_size
        description:  페이지네이션할 때, 페이지 크기에 해당하는 값으로 req.query.page_size로 받는다. 숫자만 입력 가능하다.
      - in:  query
        type:  string
        required:  false
        name:  filter 
        description:  검색할 때 검색 기준에 해당하는 값으로 req.query.filter로 받는다. 제목으로 검색하고자 한다면 title, 작성자로 검색하고자 한다면 writer, 게시글로 검색하고자 한다면 content로 입력하면 된다.
      - in:  query
        type:  string
        required:  false
        name:  text
        description:  검색할 때 검색어에 해당하는 값으로 req.query.text로 받는다. 최소 2글자에서 최대 10글자까지 입력할 수 있다.
      produces:
      - application/json
        text/plain
      responses:
         "200":
             description: 게시글 목록 출력 성공으로 DB 테이블에서 req.query의 페이지와 페이지 크기만큼의 게시글 목록을 JSON 형식으로 출력한다.
             schema:
                 type: array
                 items:
                     type: object
                     properties:
                         title:
                             type:  string
                         writer:
                             type:  string
                         date:
                             type:  string
                         content:
                             type:  string
                         views:
                             type:  int
         "400":
             description: req.query(page, page_size, filter, text)를 잘못 입력해 유효성 검사 미들웨어에서 걸러지는 경우이다. 오류가 발생한 이유를 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  400
                             message:
                                 type:  string
                                 example:  wrong input at page please input int
         "401":
             description: 로그인이 안 되어 있는 경우 로그인이 필요한 페이지임을 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  401
                             message:
                                 type:  string
                                 example:  Login isn't running please log in          
         "404":
             description: req.query의 값들을 저장한 배열에 값이 없는 경우 해당 정보가 없음을 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  404
                             message:
                                 type:  string
                                 example: There is no result
  /post/{post_index}:
    get:
      summary: Select post's information
      description: Select post's information from post_information table & Response post's information
      tags:
      - Post
      parameters:
      - in:  path
        type:  int
        required:  true
        default:  1
        name:  post_index
        description:  열람하고자 하는 게시글에 해당하는 게시글 Index로 req.params로 받는다. 숫자만 입력 가능하다.
      produces:
      - application/json
        text/plain
      responses:
         "200":
             description: 게시글 출력 성공으로 DB 테이블에서 req.params의 값을 post_index로 갖는 row의 정보를 JSON 형식으로 출력한다.
             schema:
                 type: object
                 properties:
                     title:
                         type:  string
                     writer:
                         type:  string
                     date:
                         type:  string
                     content:
                         type:  string
                     views:
                         type:  int
         "400":
             description: req.params.post_index를 잘못 입력했을 경우 오류가 발생한 이유를 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  400
                             message:
                                 type:  string
                                 example:  wrong input at post_Index please input int
         "401":
             description: 로그인이 안 되어 있는 경우 로그인이 필요한 페이지임을 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  401
                             message:
                                 type:  string
                                 example:  Login isn't running please log in          
         "404":
             description: DB에서 찾는 게시글이 없는 경우(삭제되었거나 해당하는 index가 없을 때) 해당 정보가 없음을 문자열 형식으로 출력한다.
             schema:
                 type:  object
                 properties:
                     error:
                         type:  object
                         properties:
                             code:
                                 type:  number
                                 example:  404
                             message:
                                 type:  string
                                 example: There is no result
    patch:
         summary:  Change post's information
         description:  Update post's information from post_information to user's input
         tags:
         - Post
         parameters:
         - in:  path
           type:  int
           required:  true
           default:  1
           name:  post_index
           description:  게시글 수정을 하려는 게시글 Index로 req.params로 받는다. 숫자만 입력 가능하다.
         requestBody:
             required:  true
             description:  수정 후의 게시글 정보를 입력받는 req.body이다. 아무 항목도 입력되어 있지 않으면 404 에러를 출력한다.
             content:
                 application/json:
                     schema:
                         type:  object
                         properties:
                             title:
                                 type:  string
                                 description:  수정할 게시글 제목. 최소 1글자, 최대 100글자까지 입력할 수 있으며, 한글, 알파벳, 숫자, 특수문자를 다 허용한다.
                                 example:  맛있는 맛집 1을 소개합니다~! I will introduce restaurant1##
                             content:
                                 type:  string
                                 description:  게시글 내용. 최소 1글자, 최대 500글자까지 입력할 수 있으며, 한글, 알파벳, 숫자, 특수문자를 다 허용한다.
                                 example:  정말 맛있는 집이에요~ 회사에서 10m밖에 안 떨어져 있어서 자주 갈 것 같아요!!
         responses:
             "200":
                 description:  게시글 수정 성공한 경우이다. 게시글 수정이 성공한 사실을 message 키를 갖는 JSON 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         message:
                             type:  string
                             example: edit post success
             "400":
                 description:  req.params.post_index를 잘못 입력하여 유효성 검사 미들웨어에서 걸러진 경우이거나 req.body를 잘못 입력하여 유효성 검사 미들웨어에서 걸러진 경우이다. 오류가 발생한 이유를 문자열 형식으로 출력한다.
                 schema:
                     type:  object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  400
                                 message:
                                     type:  string
                                     example:  wrong input at title please input 1 ~ 100 chars long
             "401":
                 description:  로그인이 안 되어 있는 경우 로그인이 필요한 페이지임을 문자열 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  401
                                 message:
                                     type:  string
                                     example:  Login isn't running please log in
             "403":
                 description:  세션에 저장된 유저 ID와 게시글의 작성자 ID가 다를 경우 인가되지 않은 페이지임을 문자열 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  403
                                 message:
                                     type:  string
                                     example:  you don't have authority
             "404":
                 description: 수정해야할 게시글 정보가 없는 경우(삭제되었을 때)나 수정할 정보를 입력하지 않았을 경우 해당 정보가 없음을 문자열 형식으로 출력한다.
                 schema:
                     type:  object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  404
                                 message:
                                     type:  string
                                     example: you don't input please input anything
             "409":
                 description:  DB에 있는 기존의 정보와 똑같은 정보를 입력한 경우이다. 똑같은 정보를 입력했다는 사실을 문자열 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  409
                                 message:
                                     type:  string
                                     example:  input same post_title please change your input
    delete:
         summary:  Delete post
         description:  Delete post form post_information table
         tags:
         - Post
         parameters:
         - in:  path
           type:  int
           required:  true
           default:  1
           name:  post_index
           description:  삭제하고자 하는 게시글에 해당하는 게시글 Index로 req.params로 받는다. 숫자만 입력 가능하다.
         responses:
             "204":
                 description: 게시글 삭제를 성공한 경우이다. 게시글 삭제를 성공한 사실을 message 키를 갖는 JSON 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         message:
                             type:  string
                             example:  delete post success
             "400":
                 description:  req.params.post_index를 잘못 입력했을 경우 오류가 발생한 이유를 문자열 형식으로 출력한다.
                 schema:
                     type:  object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  400
                                 message:
                                     type: string
                                     example:   wrong input at post_Index please input int
             "401":
                 description:  로그인이 안 되어 있는 경우 로그인이 필요한 페이지임을 문자열 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example: 401
                                 message:
                                     type:  string
                                     example:  Login isn't running please log in
             "403":
                 description:  세션에 저장된 유저 ID와 게시글의 작성자 ID가 다를 경우 인가되지 않은 페이지임을 문자열 형식으로 출력한다.
                 schema:
                     type: object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example: 403
                                 message:
                                     type:  string
                                     example:  you don't have authority
             "404":
                 description: DB에서 찾는 게시글 정보가 없는 경우(삭제되었을 때) 해당 정보가 없음을 문자열 형식으로 출력한다.
                 schema:
                     type:  object
                     properties:
                         error:
                             type:  object
                             properties:
                                 code:
                                     type:  number
                                     example:  404
                                 message:
                                     type:  string
                                     example: There is no result
